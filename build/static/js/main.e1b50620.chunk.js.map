{"version":3,"sources":["Components/Note.js","Services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","removeOf","getSpecific","label","important","content","onClick","axios","get","then","response","data","id","newObject","post","put","delete","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","returnedData","notesToShow","filter","toggleImportanceOf","find","changedNote","returnedNote","map","catch","error","console","log","alert","n","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAaeA,EAXF,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,iBAA+BC,GAAe,EAA5BC,YAA4B,EAAfD,UAC3CE,EAAQJ,EAAKK,UAAY,qBAAuB,iBACtD,OACI,4BACKL,EAAKM,QACN,4BAAQC,QAASN,GAAmBG,GACpC,4BAAQG,QAASL,GAAjB,Y,gBCyBG,EA9BA,WAEX,OADgBM,IAAMC,IAHV,aAIGC,MAAK,SAAAC,GAChB,OAAOA,EAASC,SA2BT,EAvBK,SAAAC,GAEhB,OADgBL,IAAMC,IAAN,UAVJ,YAUI,YAAwBI,IACzBH,MAAK,SAAAC,GAChB,OAAOA,EAASC,SAoBT,EAhBA,SAAAE,GAEX,OADgBN,IAAMO,KAjBV,YAiBwBD,GACrBJ,MAAK,SAAAC,GAChB,OAAOA,EAASC,SAaT,EATA,SAACC,EAAIC,GAEhB,OADgBN,IAAMQ,IAAN,UAxBJ,YAwBI,YAAwBH,GAAMC,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO9B,EAJA,SAAAC,GAEX,OADgBL,IAAMS,OAAN,UA7BJ,YA6BI,YAA2BJ,IAC5BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCwD9BM,EAnFH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,KAKdC,qBAAU,WACNC,IAAqBjB,MAAK,SAAAkB,GACtBP,EAASO,QAEd,IAEH,IAAMC,EAAcL,EAAUJ,EAAQA,EAAMU,QAAO,SAAA9B,GAAI,OAAIA,EAAKK,aAgB1D0B,EAAqB,SAAAlB,GACvB,IAAMb,EAAOoB,EAAMY,MAAK,SAAAhC,GAAI,OAAIA,EAAKa,KAAOA,KACtCoB,EAAW,eAAQjC,EAAR,CAAcK,WAAYL,EAAKK,YAChDsB,EACY3B,EAAKa,GAAIoB,GAChBvB,MAAK,SAAAwB,GACFb,EACID,EAAMe,KAAI,SAAAnC,GAAI,OAAKA,EAAKa,KAAOA,EAAKb,EAAOkC,SAGlDE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZG,MAAM,aAAD,OACYxC,EAAKM,QADjB,sCAGLe,EAASD,EAAMU,QAAO,SAAAW,GAAC,OAAIA,EAAE5B,KAAOA,UAI1CX,EAAW,SAAAW,GACb,IAAMb,EAAOoB,EAAMY,MAAK,SAAAhC,GAAI,OAAIA,EAAKa,KAAOA,KAC5Cc,EACY3B,EAAKa,IACZH,MAAK,kBAAMW,EAASD,EAAMU,QAAO,SAAA9B,GAAI,OAAIA,EAAKa,KAAOA,UAgB9D,OACI,6BACI,qCACA,6BACI,4BAAQN,QAAS,kBAAMkB,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BA5DGK,EAAYM,KAAI,SAAAnC,GAAI,OACvB,kBAAC,EAAD,CACIA,KAAMA,EACNC,iBAAkB,kBAAM8B,EAAmB/B,EAAKa,KAChDV,YAAa,kBAAMwB,EAAwB3B,EAAKa,KAChDX,SAAU,kBAAMA,EAASF,EAAKa,WAwDlC,0BAAM6B,SAvBE,SAAAC,GACZA,EAAMC,iBACN,IAAMC,EAAa,CACfvC,QAASgB,EACTwB,MAAM,IAAIC,MAAOC,cACjB3C,UAAW4C,KAAKC,SAAW,IAE/BvB,EAAmBkB,GAAYnC,MAAK,SAAAwB,GAChCI,QAAQC,IAAIL,EAAc,UAC1Bb,EAASD,EAAM+B,OAAOjB,IACtBX,EAAW,SAcP,2BAAO6B,MAAO9B,EAAS+B,SArDV,SAAAV,GACrBpB,EAAWoB,EAAMW,OAAOF,UAqDhB,4BAAQG,KAAK,UAAb,WC7EhBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e1b50620.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance, getSpecific, removeOf }) => {\n    const label = note.important ? \"make not important\" : \"make important\";\n    return (\n        <li>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n            <button onClick={removeOf}>remove</button>\n        </li>\n    );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseURL = \"api/notes\";\n\nconst getAll = () => {\n    const request = axios.get(baseURL);\n    return request.then(response => {\n        return response.data;\n    });\n};\n\nconst getSpecific = id => {\n    const request = axios.get(`${baseURL}/${id}`);\n    return request.then(response => {\n        return response.data;\n    });\n};\n\nconst create = newObject => {\n    const request = axios.post(baseURL, newObject);\n    return request.then(response => {\n        return response.data;\n    });\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n\nconst remove = id => {\n    const request = axios.delete(`${baseURL}/${id}`);\n    return request.then(response => response.data);\n};\nexport default {\n    getAll,\n    getSpecific,\n    create,\n    update,\n    remove\n};\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./Components/Note\";\nimport noteService from \"./Services/notes\";\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState(\"\");\n    const [showAll, setShowAll] = useState(true);\n\n    useEffect(() => {\n        noteService.getAll().then(returnedData => {\n            setNotes(returnedData);\n        });\n    }, []);\n\n    const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n    const rows = () => {\n        return notesToShow.map(note => (\n            <Note\n                note={note}\n                toggleImportance={() => toggleImportanceOf(note.id)}\n                getSpecific={() => noteService.getSpecific(note.id)}\n                removeOf={() => removeOf(note.id)}\n            />\n        ));\n    };\n    const handleNoteChange = event => {\n        setNewNote(event.target.value);\n    };\n\n    const toggleImportanceOf = id => {\n        const note = notes.find(note => note.id === id);\n        const changedNote = { ...note, important: !note.important };\n        noteService\n            .update(note.id, changedNote)\n            .then(returnedNote => {\n                setNotes(\n                    notes.map(note => (note.id !== id ? note : returnedNote))\n                );\n            })\n            .catch(error => {\n                console.log(error);\n                alert(\n                    `the note '${note.content}' was already deleted from server`\n                );\n                setNotes(notes.filter(n => n.id !== id));\n            });\n    };\n\n    const removeOf = id => {\n        const note = notes.find(note => note.id === id);\n        noteService\n            .remove(note.id)\n            .then(() => setNotes(notes.filter(note => note.id !== id)));\n    };\n    const addNote = event => {\n        event.preventDefault();\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5\n        };\n        noteService.create(noteObject).then(returnedNote => {\n            console.log(returnedNote, \"Ïñç\");\n            setNotes(notes.concat(returnedNote));\n            setNewNote(\"\");\n        });\n    };\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? \"important\" : \"all\"}\n                </button>\n            </div>\n            <ul>{rows()}</ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">save</button>\n            </form>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}