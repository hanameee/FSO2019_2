{"version":3,"sources":["Components/part2/ex15-18/Filter.js","Components/part2/ex15-18/PeopleForm.js","Services/people.js","Components/People.js","App.js","index.js"],"names":["Filter","people","filter","setFilter","filteredPeople","map","person","name","toLowerCase","includes","filteredResult","length","item","i","key","value","onChange","event","target","PeopleForm","newName","setNewName","newNumber","setNewNumber","handleOnSubmit","onSubmit","type","baseURL","axios","get","then","response","data","id","newObject","post","console","log","put","delete","People","setPeople","onClick","peopleService","number","window","confirm","p","deleteOnClickHandler","App","useState","useEffect","returnedData","preventDefault","nameObject","targetPerson","find","undefined","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e801ada5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ people, filter, setFilter }) => {\n    const pl = people.map(person => person.name.toLowerCase());\n    const filteredPeople = pl.filter(name =>\n        name.includes(filter.toLowerCase())\n    );\n    const filteredResult =\n        filteredPeople.length !== 0 ? (\n            filteredPeople.map((item, i) => <p key={i}>{item}</p>)\n        ) : (\n            <p>\n                <b>no result found</b>\n            </p>\n        );\n    return (\n        <div>\n            filter shown with:\n            <input\n                value={filter}\n                onChange={event => setFilter(event.target.value)}\n            />\n            {filter ? (\n                filteredResult\n            ) : (\n                <p>\n                    <b>please enter filter!</b>\n                </p>\n            )}\n        </div>\n    );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nfunction PeopleForm({\n    newName,\n    setNewName,\n    newNumber,\n    setNewNumber,\n    handleOnSubmit\n}) {\n    return (\n        <form onSubmit={handleOnSubmit}>\n            <div>\n                name:\n                <input\n                    value={newName}\n                    onChange={event => setNewName(event.target.value)}\n                />\n                <div>\n                    number:{\" \"}\n                    <input\n                        value={newNumber}\n                        onChange={event => setNewNumber(event.target.value)}\n                    />\n                </div>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    );\n}\n\nexport default PeopleForm;\n","import axios from \"axios\";\nconst baseURL = \"api/people\";\n\nconst getAll = () => {\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n};\n\nconst getOne = id => {\n    const request = axios.get(`${baseURL}/${id}`);\n    return request.then(response => response.data);\n};\n\nconst create = newObject => {\n    const request = axios.post(baseURL, newObject);\n    return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n    console.log(id, newObject);\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n// delete is reserved word\nconst remove = id => {\n    return axios.delete(`${baseURL}/${id}`);\n};\n\nexport default {\n    getAll,\n    getOne,\n    create,\n    update,\n    remove\n};\n","import React from \"react\";\nimport peopleService from \"../Services/people\";\n\nfunction People({ people, setPeople }) {\n    const deleteOnClickHandler = person => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            peopleService\n                .remove(person.id)\n                .then(response =>\n                    setPeople(people.filter(p => p.id !== person.id))\n                );\n        }\n    };\n    const getOneClickHandler = id => {\n        peopleService.getOne(id).then(response => console.log(response));\n    };\n\n    const peopleList = people.map(person => (\n        <>\n            <p key={person.name} onClick={() => getOneClickHandler(person.id)}>\n                <b>name : </b>\n                {person.name} <b>number : </b>\n                {person.number ? person.number : \"\"}{\" \"}\n                <button onClick={() => deleteOnClickHandler(person)}>\n                    delete\n                </button>\n            </p>\n        </>\n    ));\n    return peopleList;\n}\n\nexport default People;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Components/part2/ex15-18/Filter\";\nimport PeopleForm from \"./Components/part2/ex15-18/PeopleForm\";\nimport peopleService from \"./Services/people\";\nimport People from \"./Components/People\";\n\nconst App = () => {\n    const [people, setPeople] = useState([]);\n    const [filter, setFilter] = useState(\"\");\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n\n    useEffect(() => {\n        peopleService.getAll().then(returnedData => setPeople(returnedData));\n    }, []);\n\n    const handleOnSubmit = event => {\n        event.preventDefault();\n        const nameObject = {\n            name: newName,\n            number: newNumber\n        };\n        const targetPerson = people.find(person => person.name === newName);\n\n        if (targetPerson === undefined) {\n            peopleService\n                .create(nameObject)\n                .then(returnedData => setPeople(people.concat(returnedData)));\n            setNewName(\"\");\n            setNewNumber(\"\");\n        } else {\n            if (\n                window.confirm(\n                    `${targetPerson.name} is already added to phonebook. Replace the old number with a new one?`\n                )\n            ) {\n                console.log(targetPerson, \"targetPerson\");\n                peopleService\n                    .update(targetPerson.id, nameObject)\n                    .then(returnedData =>\n                        setPeople(\n                            people.map(person =>\n                                person.id !== returnedData.id\n                                    ? person\n                                    : returnedData\n                            )\n                        )\n                    );\n                setNewName(\"\");\n                setNewNumber(\"\");\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Filter people={people} filter={filter} setFilter={setFilter} />\n            <h3>Add a new</h3>\n            <PeopleForm\n                newName={newName}\n                setNewName={setNewName}\n                newNumber={newNumber}\n                setNewNumber={setNewNumber}\n                handleOnSubmit={handleOnSubmit}\n            />\n            <h3>Numbers</h3>\n            <People people={people} setPeople={setPeople} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}